{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","reset","preventDefault","form","label","input","type","pattern","title","required","onChange","btn","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","v4","find","toLowerCase","alert","prevState","normalizedFilter","includes","getVisibleContacts","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,mBCA/HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,2B,iBCA1FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,8ICUfC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,gBCqEtBI,MAtEf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAYAC,EAAQ,WACZP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAML,SAda,SAAAO,GACnBA,EAAMI,iBAGNX,EADgB,CAAEE,OAAME,WAExBM,KAS8Bd,UAAWC,IAAOe,KAAhD,UACE,wBAAOhB,UAAWC,IAAOgB,MAAzB,iBAEE,uBACEjB,UAAWC,IAAOiB,MAClBC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRT,MAAOP,EACPiB,SAAUb,OAGd,wBAAOV,UAAWC,IAAOgB,MAAzB,mBAEE,uBACEjB,UAAWC,IAAOiB,MAClBC,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRT,MAAOL,EACPe,SAAUb,OAId,wBAAQV,UAAWC,IAAOuB,IAAKL,KAAK,SAApC,6B,gBCjCSM,EA9BK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,oBAAI3B,UAAWC,IAAO2B,KAAtB,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAIR,UAAWC,IAAO8B,KAAMzB,KAAMA,EAAlC,UACGA,EADH,KACWE,EACT,wBACER,UAAWC,IAAOuB,IAClBL,KAAK,SACLa,QAAS,kBAAML,EAAgBG,IAHjC,sBAF2CA,S,gBCatCG,EAjBA,SAAC,GAAD,IAAGpB,EAAH,EAAGA,MAAOU,EAAV,EAAUA,SAAV,OACb,wBAAOvB,UAAWC,IAAOgB,MAAzB,kCAEE,uBACEjB,UAAWC,IAAOiB,MAClBC,KAAK,OACLN,MAAOA,EACPU,SAAUA,QC0DDW,MA5Df,WACE,MAAgC7B,oBAAS,WAAO,IAAD,EAC7C,iBAAO8B,KAAKC,MAAMC,aAAaC,QAAQ,oBAAvC,QAAuD,MADzD,mBAAOZ,EAAP,KAAiBa,EAAjB,KAGA,EAA4BlC,mBAAS,IAArC,mBAAOmC,EAAP,KAAeC,EAAf,KA0CA,OAxCAC,qBAAU,WACRL,aAAaM,QAAQ,WAAYR,KAAKS,UAAUlB,MAC/C,CAACA,IAuCF,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAatB,SA7BS,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC3BqC,EAAU,CACdf,GAAIgB,cACJxC,OACAE,UAIAkB,EAASqB,MACP,qBAAGzC,KAAgB0C,gBAAkBH,EAAQvC,KAAK0C,iBAGpDC,MAAM,GAAD,OAAI3C,EAAJ,4BAELiC,GAAY,SAAAW,GAAS,OAAKL,GAAL,mBAAiBK,UAgBtC,0CACA,cAAC,EAAD,CAAQrC,MAAO2B,EAAQjB,SAzCN,SAAAZ,GACnB8B,EAAU9B,EAAMC,cAAcC,UAyC5B,cAAC,EAAD,CACEa,SAfqB,WACzB,IAAMyB,EAAmBX,EAAOQ,cAEhC,OAAOtB,EAASc,QAAO,qBAAGlC,KACnB0C,cAAcI,SAASD,MAWhBE,GACV1B,gBAxCgB,SAAA2B,GACpBf,GAAY,SAAAgB,GAAY,mBACnBA,EAAaf,QAAO,SAAAK,GAAO,OAAIA,EAAQf,KAAOwB,gB,MCnBvDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.18894a9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1As_V\",\"label\":\"ContactForm_label__1phSt\",\"input\":\"ContactForm_input__3K6qg\",\"btn\":\"ContactForm_btn__2Q0eV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3LoDr\",\"item\":\"ContactList_item__gaaNP\",\"btn\":\"ContactList_btn__2kaPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3zwXK\",\"input\":\"Filter_input__2aQ73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__25lkL\"};","import styles from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const options = { name, number };\r\n    onSubmit(options);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.item} name={name} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\nimport { v4 } from 'uuid';\r\n\r\nimport Container from './components/Container';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\r\n  });\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const changeFilter = event => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(prevContacts => [\r\n      ...prevContacts.filter(contact => contact.id !== contactId),\r\n    ]);\r\n  };\r\n\r\n  const formSubmitHandler = ({ name, number }) => {\r\n    const contact = {\r\n      id: v4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (\r\n      contacts.find(\r\n        ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      setContacts(prevState => [contact, ...prevState]);\r\n    }\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={formSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList\r\n        contacts={getVisibleContacts()}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}